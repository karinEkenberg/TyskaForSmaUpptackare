@model TyskaForSmaUpptackare.Models.Product

@{
    ViewData["Title"] = "Lägg in ny produkt";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <h1 class="text-center pt-5 pb-5">@ViewData["Title"]</h1>
            <div class="row pb-5">
                <div class="col-6">
                    <p>Tänk på att dina produkter läggs in som ett grid, ha det i åtanke av ordningen när du lägger in dem.</p>
                </div>
                <div class="col-6">
                    <img src="~/img/tfsu-produktgrid.PNG" alt="Produkt grid" class="img-fluid" />
                </div>
            </div>
            <form asp-action="Create" method="post">
                <!-- Produktens egna fält -->
                <div class="form-group">
                    <label asp-for="Name" class="control-label">Namn</label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label">Beskrivning</label>
                    <textarea asp-for="Description" class="form-control"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Price" class="control-label">Pris</label>
                    <input asp-for="Price" class="form-control" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ImageUrl" class="control-label">Bild URL (/img/bild.png)</label>
                    <input asp-for="ImageUrl" class="form-control" />
                    <span asp-validation-for="ImageUrl" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="AudioUrl" class="control-label">Ljud URL (/audio/bild.mp3)</label>
                    <input asp-for="AudioUrl" class="form-control" />
                    <span asp-validation-for="AudioUrl" class="text-danger"></span>
                </div>

                <hr />
                <h3>Rum</h3>
                <div id="rooms-container">
                    <!-- Här renderas de dynamiskt tillagda rummen -->
                </div>
                <button type="button" id="add-room" class="btn btn-primary">Lägg till rum</button>

                <hr />
                <!-- Gemensam submit-knapp för att spara allt -->
                <input type="submit" value="Skapa" class="btn btn-success" />
            </form>
        </div>
    </div>
</div>

<!-- Mall för rum -->
<div id="room-template" style="display: none;">
    <div class="room">
        <div class="form-group">
            <label>Rumsnamn</label>
            <input type="text" name="Items[{{roomIndex}}].Name" class="form-control" placeholder="Ange rumsnamn" />
            <label>Bild</label>
            <input type="text" name="Items[{{roomIndex}}].ImageUrl" class="form-control" placeholder="Ange bildurl" />
            <label>Ljud</label>
            <input type="text" name="Items[{{roomIndex}}].AudioUrl" class="form-control" placeholder="Ange ljudurl" />
        </div>
        <div class="items-container">
            <!-- Här läggs dynamiskt saker (ProductPart) till -->
        </div>
        <button type="button" class="btn btn-secondary add-part">Lägg till sak</button>
        <button type="button" class="btn btn-danger remove-room">Ta bort rum</button>
    </div>
</div>

<!-- Mall för sak -->
<div id="part-template" style="display: none;">
    <div class="part">
        <div class="form-group">
            <label>Saknamn</label>
            <input type="text" name="Items[{{roomIndex}}].Parts[{{partIndex}}].Name" class="form-control" placeholder="Ange saknamn" />
            <label>Bild</label>
            <input type="text" name="Items[{{roomIndex}}].Parts[{{partIndex}}].ImageUrl" class="form-control" placeholder="Ange bildurl" />
            <label>Ljud</label>
            <input type="text" name="Items[{{roomIndex}}].Parts[{{partIndex}}].AudioUrl" class="form-control" placeholder="Ange ljudurl" />
        </div>
        <button type="button" class="btn btn-danger remove-part">Ta bort sak</button>
    </div>
</div>

<script>
    let roomCount = 0;

    // Lägg till nytt rum
    document.getElementById('add-room').addEventListener('click', function () {
        if (roomCount >= 9) {
            alert("Maximalt 9 rum är tillåtna.");
            return;
        }
        let template = document.getElementById('room-template').innerHTML;
        template = template.replace(/{{roomIndex}}/g, roomCount);
        let container = document.getElementById('rooms-container');
        let div = document.createElement('div');
        div.innerHTML = template;
        container.appendChild(div);
        roomCount++;
    });

    // Hantera klick på "Lägg till sak", ta bort rum och ta bort sak via event delegation
    document.getElementById('rooms-container').addEventListener('click', function (e) {
        // Lägg till sak
        if (e.target && e.target.classList.contains('add-part')) {
            let roomDiv = e.target.closest('.room');
            let itemsContainer = roomDiv.querySelector('.items-container');
            let roomIndexMatch = roomDiv.querySelector('input').name.match(/Items\[(\d+)\]/);
            if (!roomIndexMatch) return;
            let roomIndex = roomIndexMatch[1];
            let partCount = itemsContainer.children.length;
            if (partCount >= 9) {
                alert("Maximalt 9 saker per rum är tillåtna.");
                return;
            }
            let partTemplate = document.getElementById('part-template').innerHTML;
            partTemplate = partTemplate.replace(/{{roomIndex}}/g, roomIndex)
                .replace(/{{partIndex}}/g, partCount);
            let div = document.createElement('div');
            div.innerHTML = partTemplate;
            itemsContainer.appendChild(div);
        }
        // Ta bort rum
        if (e.target && e.target.classList.contains('remove-room')) {
            e.target.closest('.room').remove();
        }
        // Ta bort sak
        if (e.target && e.target.classList.contains('remove-part')) {
            e.target.closest('.part').remove();
        }
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
